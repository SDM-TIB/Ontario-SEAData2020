
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL AND ASC ASK BOOLEAN BOUND BY BYTE COLON COMA CONSTANT CONTAINS DATATYPE DATETIME DECIMAL DECIMALCONST DESC DISTINCT DIV DOUBLE DOUBLECONST EQUALS FILTER FLOAT GREATER GREATEREQ ID INT INTEGER ISBLANK ISIRI ISLITERAL ISURI LANG LANGMATCHES LCASE LESS LESSEQ LIMIT LKEY LONG LPAR MINUS NEG NEGATIVEINT NEQUALS NONNEGINT NONPOSINT NUMBER OFFSET OPTIONAL OR ORDER PLUS POINT POSITIVEINT PREFIX REGEX RKEY RPAR SAMETERM SELECT SHORT STR STRING TIMES UCASE UNION UNSIGNEDBYTE UNSIGNEDINT UNSIGNEDLONG UNSIGNEDSHORT UPPERCASE URI VARIABLE WHERE\n    parse_sparql : prefix_list query order_by limit offset\n    \n    parse_sparql : prefix_list query order_by offset limit\n    \n    prefix_list : prefix prefix_list\n    \n    prefix_list : empty\n    \n    empty :\n    \n    prefix : PREFIX uri\n    \n    uri : ID COLON ID\n    \n    uri : ID COLON URI\n    \n    uri : URI\n    \n    order_by : ORDER BY var_order_list desc_var\n    \n    order_by : empty\n    \n    var_order_list : empty\n    \n    var_order_list : var_order_list desc_var\n    \n    desc_var : DESC LPAR VARIABLE RPAR\n    \n    desc_var : VARIABLE\n    \n    desc_var : ASC LPAR VARIABLE RPAR\n    \n    desc_var : unary_func LPAR desc_var RPAR\n    \n    limit : LIMIT NUMBER\n    \n    limit : empty\n    \n    offset : OFFSET NUMBER\n    \n    offset : empty\n    \n    query : SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY\n    \n    query : SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK WHERE LKEY group_graph_pattern RKEY\n    \n    query : ASK LKEY group_graph_pattern RKEY\n    \n    distinct : DISTINCT\n    \n    distinct : empty\n    \n    group_graph_pattern : union_block\n    \n    union_block : pjoin_block rest_union_block POINT pjoin_block\n    \n    union_block : pjoin_block rest_union_block pjoin_block\n    \n    union_block : pjoin_block rest_union_block\n    \n    pjoin_block : LKEY join_block RKEY\n    \n    pjoin_block : join_block\n    \n    pjoin_block : empty\n    \n    rest_union_block : empty\n    \n    rest_union_block : UNION LKEY join_block rest_union_block RKEY rest_union_block\n    \n    join_block : LKEY union_block RKEY rest_join_block\n    \n    join_block : bgp rest_join_block\n    \n    rest_join_block : empty\n    \n    rest_join_block : POINT bgp rest_join_block\n    \n    rest_join_block : bgp rest_join_block\n    \n    bgp :  LKEY bgp UNION bgp rest_union_block RKEY\n    \n    bgp : bgp UNION bgp rest_union_block\n    \n    bgp : triple\n    \n    bgp : FILTER LPAR expression RPAR\n    \n    bgp : FILTER express_rel\n    \n    bgp : OPTIONAL LKEY group_graph_pattern RKEY\n    \n    bgp : LKEY join_block RKEY\n    \n    expression : express_rel LOGOP expression\n    \n    expression : express_rel\n    \n    expression : LPAR expression RPAR\n    \n    express_rel : express_arg RELOP express_rel\n    \n    express_rel : express_arg\n    \n    express_rel : LPAR express_rel RPAR\n    \n    express_rel : NEG LPAR expression RPAR\n    \n    express_rel : NEG express_rel\n    \n    express_arg : uri\n    \n    express_arg : VARIABLE\n    \n    express_arg : CONSTANT\n    \n    express_arg : NUMBER\n    \n    express_arg : NUMBER POINT NUMBER\n    \n    express_arg : REGEX LPAR express_arg COMA pattern_arg regex_flag\n    \n    regex_flag : RPAR\n    \n    regex_flag : COMA pattern_arg RPAR\n    \n    pattern_arg : CONSTANT\n    \n    express_arg : binary_func LPAR express_arg COMA express_arg RPAR\n    \n    express_arg : unary_func LPAR express_arg RPAR\n    \n    express_arg : UNARYOP express_arg\n    \n    express_arg : express_arg ARITOP express_arg\n    \n    express_arg : LPAR express_arg RPAR\n    \n    express_arg : express_arg RELOP express_arg\n    \n    ARITOP : PLUS\n    \n    ARITOP : MINUS\n    \n    ARITOP : TIMES\n    \n    ARITOP : DIV\n    \n    UNARYOP : PLUS\n    \n    UNARYOP : MINUS\n    \n    LOGOP : AND\n    \n    LOGOP : OR\n    \n    RELOP : EQUALS\n    \n    RELOP : LESS\n    \n    RELOP : LESSEQ\n    \n    RELOP : GREATER\n    \n    RELOP : GREATEREQ\n    \n    RELOP : NEQUALS\n    \n    binary_func : REGEX\n    \n    binary_func : SAMETERM\n    \n    binary_func : LANGMATCHES\n    \n    binary_func : CONSTANT\n    \n    binary_func : CONTAINS\n    \n    unary_func : BOUND\n    \n    unary_func : ISIRI\n    \n    unary_func : ISURI\n    \n    unary_func : ISBLANK\n    \n    unary_func : ISLITERAL\n    \n    unary_func : LANG\n    \n    unary_func : DATATYPE\n    \n    unary_func : STR\n    \n    unary_func : UPPERCASE\n    \n    unary_func : DOUBLE\n               | INTEGER\n               | DECIMAL\n               | FLOAT\n               | STRING\n               | BOOLEAN\n               | DATETIME\n               | NONPOSINT\n               | NEGATIVEINT\n               | LONG\n               | INT\n               | SHORT\n               | BYTE\n               | NONNEGINT\n               | UNSIGNEDLONG\n               | UNSIGNEDINT\n               | UNSIGNEDSHORT\n               | UNSIGNEDBYTE\n               | POSITIVEINT\n    \n    unary_func : ID COLON ID\n    \n    unary_func : uri\n    \n    unary_func : UCASE\n    \n    unary_func : LCASE\n    \n    var_list : var_list VARIABLE\n    \n    var_list : VARIABLE\n    \n    triple : subject predicate object\n    \n    predicate : ID\n    \n    predicate : uri\n    \n    predicate : VARIABLE\n    \n    subject : uri\n    \n    subject : VARIABLE\n    \n    object : uri\n    \n    object : VARIABLE\n    \n    object : CONSTANT\n    \n    object : DOUBLECONST\n    \n    object : DECIMALCONST\n    \n    object : NUMBER\n    '
    
_lr_action_items = {'PREFIX':([0,3,10,12,45,46,],[5,5,-6,-9,-7,-8,]),'SELECT':([0,2,3,4,9,10,12,45,46,],[-5,7,-5,-4,-3,-6,-9,-7,-8,]),'ASK':([0,2,3,4,9,10,12,45,46,],[-5,8,-5,-4,-3,-6,-9,-7,-8,]),'$end':([1,6,13,15,22,23,25,47,48,49,50,51,52,63,126,128,135,224,225,238,239,240,],[0,-5,-5,-11,-5,-5,-19,-1,-21,-2,-19,-18,-20,-25,-10,-15,-24,-22,-23,-14,-16,-17,]),'ID':([5,12,20,21,27,31,32,35,36,37,38,39,40,42,43,44,45,46,53,54,59,60,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,119,120,121,122,123,124,125,126,128,133,134,136,137,138,139,140,141,143,144,145,146,147,148,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,185,186,189,190,191,193,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,212,216,218,219,226,228,233,235,236,237,238,239,240,241,242,247,249,250,251,253,],[11,-9,11,45,-5,11,11,-5,-33,-34,11,-44,85,123,-129,-130,-7,-8,131,-12,11,-33,11,11,-35,11,-38,11,-39,11,11,85,-46,-53,85,-57,-58,-59,-60,85,-76,-77,11,11,-126,-127,-128,-13,-15,11,11,11,11,-33,-32,11,11,11,11,-41,-5,11,11,85,85,85,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,85,-56,85,85,85,-68,85,218,-125,-131,-132,-133,-134,-135,-136,131,223,-32,-37,-5,11,11,-43,-40,-33,-48,-45,-54,85,-78,-79,-70,-53,-52,85,-69,-61,85,-7,-47,-43,11,-55,85,-67,-71,-14,-16,-17,-42,-5,-36,-62,-63,-66,-64,]),'URI':([5,12,20,21,27,31,32,35,36,37,38,39,40,42,43,44,45,46,53,54,59,60,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,119,120,121,122,123,124,125,126,128,133,134,136,137,138,139,140,141,143,144,145,146,147,148,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,185,186,189,190,191,193,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,212,216,218,219,226,228,233,235,236,237,238,239,240,241,242,247,249,250,251,253,],[12,-9,12,46,-5,12,12,-5,-33,-34,12,-44,12,12,-129,-130,-7,-8,12,-12,12,-33,12,12,-35,12,-38,12,-39,12,12,12,-46,-53,12,-57,-58,-59,-60,12,-76,-77,12,12,-126,-127,-128,-13,-15,12,12,12,12,-33,-32,12,12,12,12,-41,-5,12,12,12,12,12,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,12,-56,12,12,12,-68,12,46,-125,-131,-132,-133,-134,-135,-136,12,46,-32,-37,-5,12,12,-43,-40,-33,-48,-45,-54,12,-78,-79,-70,-53,-52,12,-69,-61,12,-7,-47,-43,12,-55,12,-67,-71,-14,-16,-17,-42,-5,-36,-62,-63,-66,-64,]),'ORDER':([6,63,135,224,225,],[14,-25,-24,-22,-23,]),'LIMIT':([6,13,15,23,25,52,63,126,128,135,224,225,238,239,240,],[-5,24,-11,24,-21,-20,-25,-10,-15,-24,-22,-23,-14,-16,-17,]),'OFFSET':([6,13,15,22,25,51,63,126,128,135,224,225,238,239,240,],[-5,26,-11,26,-19,-18,-25,-10,-15,-24,-22,-23,-14,-16,-17,]),'DISTINCT':([7,],[17,]),'ALL':([7,16,17,18,],[-5,29,-26,-27,]),'VARIABLE':([7,12,16,17,18,20,27,28,30,31,32,35,36,37,38,39,40,42,43,44,45,46,53,54,56,59,60,62,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,119,120,121,122,123,124,125,126,128,133,134,136,137,138,139,140,141,143,144,145,146,147,148,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,176,177,178,179,180,181,182,183,184,185,189,190,191,193,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,212,216,218,219,226,228,233,235,236,237,238,239,240,241,242,247,249,250,251,253,],[-5,-9,30,-26,-27,44,-5,56,-124,44,44,-5,-33,-34,44,-44,78,125,-129,-130,-7,-8,128,-12,-123,44,-33,44,44,-35,44,-38,44,-39,44,44,78,-46,-53,78,-57,-58,-59,-60,78,-76,-77,44,178,-126,-127,-128,-13,-15,44,44,44,44,-33,-32,44,44,44,44,-41,-5,44,44,78,78,78,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,78,-56,78,78,78,-68,78,-125,-131,-132,-133,-134,-135,-136,220,221,128,-32,-37,-5,44,44,-43,-40,-33,-48,-45,-54,78,-78,-79,-70,-53,-52,78,-69,-61,78,-7,-47,-43,44,-55,78,-67,-71,-14,-16,-17,-42,-5,-36,-62,-63,-66,-64,]),'WHERE':([8,28,29,30,56,],[19,55,57,-124,-123,]),'LKEY':([8,12,19,20,31,32,35,36,37,38,39,41,45,46,55,57,59,60,62,64,65,66,67,68,69,70,71,72,74,75,77,78,79,80,121,133,134,136,137,138,139,140,141,143,144,145,146,147,148,167,172,176,177,178,179,180,181,182,189,190,191,193,195,196,197,198,199,201,202,206,207,208,210,212,218,219,226,228,233,236,237,241,242,247,249,250,251,253,],[20,-9,31,32,32,59,-5,-33,-34,72,-44,121,-7,-8,133,134,136,-33,72,32,-35,144,72,-38,72,-39,72,148,-46,-53,-57,-58,-59,-60,32,32,32,136,72,-33,-32,72,72,32,193,-41,-5,72,136,-56,-68,-125,-131,-132,-133,-134,-135,-136,-32,-37,-5,136,228,-43,-40,-33,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,-43,193,-55,-67,-71,-42,-5,-36,-62,-63,-66,-64,]),'COLON':([11,85,123,131,],[21,174,21,186,]),'EQUALS':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,156,-57,-58,-59,-60,156,156,-70,156,156,-61,156,156,156,156,-7,-67,156,156,-62,-63,-66,-64,]),'LESS':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,157,-57,-58,-59,-60,157,157,-70,157,157,-61,157,157,157,157,-7,-67,157,157,-62,-63,-66,-64,]),'LESSEQ':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,158,-57,-58,-59,-60,158,158,-70,158,158,-61,158,158,158,158,-7,-67,158,158,-62,-63,-66,-64,]),'GREATER':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,159,-57,-58,-59,-60,159,159,-70,159,159,-61,159,159,159,159,-7,-67,159,159,-62,-63,-66,-64,]),'GREATEREQ':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,160,-57,-58,-59,-60,160,160,-70,160,160,-61,160,160,160,160,-7,-67,160,160,-62,-63,-66,-64,]),'NEQUALS':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,161,-57,-58,-59,-60,161,161,-70,161,161,-61,161,161,161,161,-7,-67,161,161,-62,-63,-66,-64,]),'PLUS':([12,40,46,73,75,76,77,78,79,80,84,119,120,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,172,173,203,204,205,206,207,209,210,212,213,214,215,216,217,218,235,236,237,246,249,250,251,253,],[-9,119,-8,119,162,119,-57,-58,-59,-60,119,-76,-77,119,162,119,119,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,119,119,119,119,162,119,119,-78,-79,-70,162,119,162,-61,162,162,162,119,162,-7,119,-67,162,162,-62,-63,-66,-64,]),'MINUS':([12,40,46,73,75,76,77,78,79,80,84,119,120,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,172,173,203,204,205,206,207,209,210,212,213,214,215,216,217,218,235,236,237,246,249,250,251,253,],[-9,120,-8,120,163,120,-57,-58,-59,-60,120,-76,-77,120,163,120,120,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,120,120,120,120,163,120,120,-78,-79,-70,163,120,163,-61,163,163,163,120,163,-7,120,-67,163,163,-62,-63,-66,-64,]),'TIMES':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,164,-57,-58,-59,-60,164,164,-70,164,164,-61,164,164,164,164,-7,-67,164,164,-62,-63,-66,-64,]),'DIV':([12,46,75,77,78,79,80,153,172,206,207,210,212,213,214,215,217,218,236,237,246,249,250,251,253,],[-9,-8,165,-57,-58,-59,-60,165,165,-70,165,165,-61,165,165,165,165,-7,-67,165,165,-62,-63,-66,-64,]),'UNION':([12,20,31,32,35,36,37,38,39,45,46,59,60,62,65,67,68,70,74,75,77,78,79,80,121,133,134,136,137,138,139,140,145,146,147,148,167,172,176,177,178,179,180,181,182,189,190,191,193,194,196,197,198,199,201,202,206,207,208,210,212,218,219,226,233,236,237,241,242,243,247,249,250,251,253,],[-9,-5,-5,-5,66,-33,-34,69,-44,-7,-8,-5,-33,141,-35,69,-38,-39,-46,-53,-57,-58,-59,-60,-5,-5,-5,-5,141,-33,-32,-5,-41,195,69,-5,-56,-68,-125,-131,-132,-133,-134,-135,-136,-32,-37,195,-5,66,-43,-40,-33,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,-43,-55,-67,-71,-42,66,66,-36,-62,-63,-66,-64,]),'POINT':([12,20,31,32,35,36,37,38,39,45,46,59,60,62,64,65,67,68,70,74,75,77,78,79,80,121,133,134,136,137,138,139,140,145,146,147,148,167,172,176,177,178,179,180,181,182,189,190,191,193,196,197,198,199,201,202,206,207,208,210,212,218,219,226,233,236,237,241,242,247,249,250,251,253,],[-9,-5,-5,-5,-5,-33,-34,71,-44,-7,-8,-5,-33,71,143,-35,71,-38,-39,-46,-53,-57,-58,-59,168,-5,-5,-5,-5,71,-33,-32,71,-41,-5,71,-5,-56,-68,-125,-131,-132,-133,-134,-135,-136,-32,-37,-5,-5,-43,-40,-33,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,-43,-55,-67,-71,-42,-5,-36,-62,-63,-66,-64,]),'FILTER':([12,20,31,32,35,36,37,38,39,45,46,59,60,62,64,65,67,68,69,70,71,72,74,75,77,78,79,80,121,133,134,136,137,138,139,140,141,143,144,145,146,147,148,167,172,176,177,178,179,180,181,182,189,190,191,193,195,196,197,198,199,201,202,206,207,208,210,212,218,219,226,228,233,236,237,241,242,247,249,250,251,253,],[-9,40,40,40,-5,-33,-34,40,-44,-7,-8,40,-33,40,40,-35,40,-38,40,-39,40,40,-46,-53,-57,-58,-59,-60,40,40,40,40,40,-33,-32,40,40,40,40,-41,-5,40,40,-56,-68,-125,-131,-132,-133,-134,-135,-136,-32,-37,-5,40,40,-43,-40,-33,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,-43,40,-55,-67,-71,-42,-5,-36,-62,-63,-66,-64,]),'OPTIONAL':([12,20,31,32,35,36,37,38,39,45,46,59,60,62,64,65,67,68,69,70,71,72,74,75,77,78,79,80,121,133,134,136,137,138,139,140,141,143,144,145,146,147,148,167,172,176,177,178,179,180,181,182,189,190,191,193,195,196,197,198,199,201,202,206,207,208,210,212,218,219,226,228,233,236,237,241,242,247,249,250,251,253,],[-9,41,41,41,-5,-33,-34,41,-44,-7,-8,41,-33,41,41,-35,41,-38,41,-39,41,41,-46,-53,-57,-58,-59,-60,41,41,41,41,41,-33,-32,41,41,41,41,-41,-5,41,41,-56,-68,-125,-131,-132,-133,-134,-135,-136,-32,-37,-5,41,41,-43,-40,-33,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,-43,41,-55,-67,-71,-42,-5,-36,-62,-63,-66,-64,]),'RKEY':([12,20,31,32,33,34,35,36,37,38,39,45,46,58,59,60,61,62,64,65,67,68,70,74,75,77,78,79,80,121,133,134,136,137,138,139,140,142,143,145,146,147,148,149,167,172,175,176,177,178,179,180,181,182,187,188,189,190,191,192,193,194,196,197,198,199,201,202,206,207,208,210,212,218,219,226,227,233,236,237,241,242,243,247,249,250,251,253,],[-9,-5,-5,-5,63,-28,-5,-33,-34,-5,-44,-7,-8,135,-5,139,140,-5,-5,-35,-5,-38,-39,-46,-53,-57,-58,-59,-60,-5,-5,-5,-5,-5,189,-32,-5,-30,-5,-41,-5,-5,-5,199,-56,-68,219,-125,-131,-132,-133,-134,-135,-136,224,225,-32,-37,-5,-29,-5,-5,-43,-40,199,-48,-45,-54,-70,-53,-52,-69,-61,-7,-47,241,242,-55,-67,-71,-42,-5,199,-36,-62,-63,-66,-64,]),'LPAR':([12,40,46,73,76,77,79,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,127,129,130,132,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,218,223,235,],[-9,73,-8,150,166,-120,-89,169,170,171,173,-87,-88,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-121,-122,-76,-77,183,184,185,-120,150,209,173,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,150,173,173,173,173,150,-78,-79,209,173,-7,-7,173,]),'CONSTANT':([12,40,45,46,73,76,84,119,120,122,123,124,125,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,234,235,248,],[-9,79,-7,-8,79,79,79,-76,-77,179,-126,-127,-128,79,79,79,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,79,79,79,79,79,79,-78,-79,79,79,245,79,245,]),'DOUBLECONST':([12,45,46,122,123,124,125,],[-9,-7,-8,180,-126,-127,-128,]),'DECIMALCONST':([12,45,46,122,123,124,125,],[-9,-7,-8,181,-126,-127,-128,]),'NUMBER':([12,24,26,40,45,46,73,76,84,119,120,122,123,124,125,150,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,173,203,204,205,209,216,235,],[-9,51,52,80,-7,-8,80,80,80,-76,-77,182,-126,-127,-128,80,80,80,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,80,212,80,80,80,80,80,-78,-79,80,80,80,]),'RPAR':([12,46,75,77,78,79,80,128,151,152,153,167,172,200,202,206,207,208,210,211,212,215,217,218,220,221,222,229,230,231,232,233,236,237,238,239,240,244,245,246,249,250,251,252,253,],[-9,-8,-53,-57,-58,-59,-60,-15,201,202,206,-56,-68,229,-54,-70,-53,-52,-69,233,-61,236,206,-7,238,239,240,-51,-50,-49,202,-55,-67,-71,-14,-16,-17,250,-65,251,-62,-63,-66,253,-64,]),'AND':([12,46,75,77,78,79,80,152,153,167,172,202,206,207,208,210,212,218,230,233,236,237,249,250,251,253,],[-9,-8,-53,-57,-58,-59,-60,204,-53,-56,-68,-54,-70,-53,-52,-69,-61,-7,204,-55,-67,-71,-62,-63,-66,-64,]),'OR':([12,46,75,77,78,79,80,152,153,167,172,202,206,207,208,210,212,218,230,233,236,237,249,250,251,253,],[-9,-8,-53,-57,-58,-59,-60,205,-53,-56,-68,-54,-70,-53,-52,-69,-61,-7,205,-55,-67,-71,-62,-63,-66,-64,]),'COMA':([12,46,77,78,79,80,172,206,210,212,213,214,218,236,237,244,245,249,250,251,253,],[-9,-8,-57,-58,-59,-60,-68,-70,-69,-61,234,235,-7,-67,-71,248,-65,-62,-63,-66,-64,]),'BY':([14,],[27,]),'DESC':([27,53,54,126,128,185,238,239,240,],[-5,127,-12,-13,-15,127,-14,-16,-17,]),'ASC':([27,53,54,126,128,185,238,239,240,],[-5,129,-12,-13,-15,129,-14,-16,-17,]),'BOUND':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,89,89,-12,89,89,89,-76,-77,-13,-15,89,89,89,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,89,89,89,89,89,89,89,-78,-79,89,89,89,-14,-16,-17,]),'ISIRI':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,90,90,-12,90,90,90,-76,-77,-13,-15,90,90,90,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,90,90,90,90,90,90,90,-78,-79,90,90,90,-14,-16,-17,]),'ISURI':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,91,91,-12,91,91,91,-76,-77,-13,-15,91,91,91,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,91,91,91,91,91,91,91,-78,-79,91,91,91,-14,-16,-17,]),'ISBLANK':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,92,92,-12,92,92,92,-76,-77,-13,-15,92,92,92,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,92,92,92,92,92,92,92,-78,-79,92,92,92,-14,-16,-17,]),'ISLITERAL':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,93,93,-12,93,93,93,-76,-77,-13,-15,93,93,93,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,93,93,93,93,93,93,93,-78,-79,93,93,93,-14,-16,-17,]),'LANG':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,94,94,-12,94,94,94,-76,-77,-13,-15,94,94,94,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,94,94,94,94,94,94,94,-78,-79,94,94,94,-14,-16,-17,]),'DATATYPE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,95,95,-12,95,95,95,-76,-77,-13,-15,95,95,95,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,95,95,95,95,95,95,95,-78,-79,95,95,95,-14,-16,-17,]),'STR':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,96,96,-12,96,96,96,-76,-77,-13,-15,96,96,96,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,96,96,96,96,96,96,96,-78,-79,96,96,96,-14,-16,-17,]),'UPPERCASE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,97,97,-12,97,97,97,-76,-77,-13,-15,97,97,97,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,97,97,97,97,97,97,97,-78,-79,97,97,97,-14,-16,-17,]),'DOUBLE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,98,98,-12,98,98,98,-76,-77,-13,-15,98,98,98,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,98,98,98,98,98,98,98,-78,-79,98,98,98,-14,-16,-17,]),'INTEGER':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,99,99,-12,99,99,99,-76,-77,-13,-15,99,99,99,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,99,99,99,99,99,99,99,-78,-79,99,99,99,-14,-16,-17,]),'DECIMAL':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,100,100,-12,100,100,100,-76,-77,-13,-15,100,100,100,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,100,100,100,100,100,100,100,-78,-79,100,100,100,-14,-16,-17,]),'FLOAT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,101,101,-12,101,101,101,-76,-77,-13,-15,101,101,101,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,101,101,101,101,101,101,101,-78,-79,101,101,101,-14,-16,-17,]),'STRING':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,102,102,-12,102,102,102,-76,-77,-13,-15,102,102,102,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,102,102,102,102,102,102,102,-78,-79,102,102,102,-14,-16,-17,]),'BOOLEAN':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,103,103,-12,103,103,103,-76,-77,-13,-15,103,103,103,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,103,103,103,103,103,103,103,-78,-79,103,103,103,-14,-16,-17,]),'DATETIME':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,104,104,-12,104,104,104,-76,-77,-13,-15,104,104,104,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,104,104,104,104,104,104,104,-78,-79,104,104,104,-14,-16,-17,]),'NONPOSINT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,105,105,-12,105,105,105,-76,-77,-13,-15,105,105,105,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,105,105,105,105,105,105,105,-78,-79,105,105,105,-14,-16,-17,]),'NEGATIVEINT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,106,106,-12,106,106,106,-76,-77,-13,-15,106,106,106,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,106,106,106,106,106,106,106,-78,-79,106,106,106,-14,-16,-17,]),'LONG':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,107,107,-12,107,107,107,-76,-77,-13,-15,107,107,107,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,107,107,107,107,107,107,107,-78,-79,107,107,107,-14,-16,-17,]),'INT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,108,108,-12,108,108,108,-76,-77,-13,-15,108,108,108,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,108,108,108,108,108,108,108,-78,-79,108,108,108,-14,-16,-17,]),'SHORT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,109,109,-12,109,109,109,-76,-77,-13,-15,109,109,109,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,109,109,109,109,109,109,109,-78,-79,109,109,109,-14,-16,-17,]),'BYTE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,110,110,-12,110,110,110,-76,-77,-13,-15,110,110,110,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,110,110,110,110,110,110,110,-78,-79,110,110,110,-14,-16,-17,]),'NONNEGINT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,111,111,-12,111,111,111,-76,-77,-13,-15,111,111,111,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,111,111,111,111,111,111,111,-78,-79,111,111,111,-14,-16,-17,]),'UNSIGNEDLONG':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,112,112,-12,112,112,112,-76,-77,-13,-15,112,112,112,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,112,112,112,112,112,112,112,-78,-79,112,112,112,-14,-16,-17,]),'UNSIGNEDINT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,113,113,-12,113,113,113,-76,-77,-13,-15,113,113,113,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,113,113,113,113,113,113,113,-78,-79,113,113,113,-14,-16,-17,]),'UNSIGNEDSHORT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,114,114,-12,114,114,114,-76,-77,-13,-15,114,114,114,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,114,114,114,114,114,114,114,-78,-79,114,114,114,-14,-16,-17,]),'UNSIGNEDBYTE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,115,115,-12,115,115,115,-76,-77,-13,-15,115,115,115,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,115,115,115,115,115,115,115,-78,-79,115,115,115,-14,-16,-17,]),'POSITIVEINT':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,116,116,-12,116,116,116,-76,-77,-13,-15,116,116,116,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,116,116,116,116,116,116,116,-78,-79,116,116,116,-14,-16,-17,]),'UCASE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,117,117,-12,117,117,117,-76,-77,-13,-15,117,117,117,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,117,117,117,117,117,117,117,-78,-79,117,117,117,-14,-16,-17,]),'LCASE':([27,40,53,54,73,76,84,119,120,126,128,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,185,203,204,205,209,216,235,238,239,240,],[-5,118,118,-12,118,118,118,-76,-77,-13,-15,118,118,118,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,118,118,118,118,118,118,118,-78,-79,118,118,118,-14,-16,-17,]),'NEG':([40,73,76,150,154,156,157,158,159,160,161,166,203,204,205,209,],[76,76,76,76,76,-80,-81,-82,-83,-84,-85,76,76,-78,-79,76,]),'REGEX':([40,73,76,84,119,120,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,235,],[81,81,81,81,-76,-77,81,81,81,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,81,81,81,81,81,81,-78,-79,81,81,81,]),'SAMETERM':([40,73,76,84,119,120,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,235,],[86,86,86,86,-76,-77,86,86,86,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,86,86,86,86,86,86,-78,-79,86,86,86,]),'LANGMATCHES':([40,73,76,84,119,120,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,235,],[87,87,87,87,-76,-77,87,87,87,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,87,87,87,87,87,87,-78,-79,87,87,87,]),'CONTAINS':([40,73,76,84,119,120,150,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,173,203,204,205,209,216,235,],[88,88,88,88,-76,-77,88,88,88,-80,-81,-82,-83,-84,-85,-72,-73,-74,-75,88,88,88,88,88,88,-78,-79,88,88,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parse_sparql':([0,],[1,]),'prefix_list':([0,3,],[2,9,]),'prefix':([0,3,],[3,3,]),'empty':([0,3,6,7,13,20,22,23,27,31,32,35,38,59,62,64,67,121,133,134,136,137,140,143,146,147,148,191,193,194,242,243,],[4,4,15,18,25,37,48,50,54,37,37,65,70,37,70,37,70,37,37,37,37,70,70,37,65,70,37,65,37,65,65,65,]),'query':([2,],[6,]),'uri':([5,20,31,32,38,40,42,53,59,62,64,67,69,71,72,73,76,84,121,122,133,134,136,137,140,141,143,144,147,148,150,154,155,166,169,170,171,173,185,193,195,203,209,216,228,235,],[10,43,43,43,43,77,124,132,43,43,43,43,43,43,43,77,77,77,43,177,43,43,43,43,43,43,43,43,43,43,77,77,77,77,77,77,77,77,132,43,43,77,77,77,43,77,]),'order_by':([6,],[13,]),'distinct':([7,],[16,]),'limit':([13,23,],[22,49,]),'offset':([13,22,],[23,47,]),'var_list':([16,],[28,]),'group_graph_pattern':([20,31,121,133,134,],[33,58,175,187,188,]),'union_block':([20,31,32,59,121,133,134,136,148,193,],[34,34,61,61,34,34,34,61,61,61,]),'pjoin_block':([20,31,32,59,64,121,133,134,136,143,148,193,],[35,35,35,35,142,35,35,35,35,192,35,35,]),'join_block':([20,31,32,59,64,72,121,133,134,136,143,144,148,193,228,],[36,36,60,138,36,149,36,36,36,138,36,194,198,198,243,]),'bgp':([20,31,32,38,59,62,64,67,69,71,72,121,133,134,136,137,140,141,143,144,147,148,193,195,228,],[38,38,62,67,137,67,38,67,146,147,137,38,38,38,137,67,67,191,38,38,67,137,137,146,62,]),'triple':([20,31,32,38,59,62,64,67,69,71,72,121,133,134,136,137,140,141,143,144,147,148,193,195,228,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'subject':([20,31,32,38,59,62,64,67,69,71,72,121,133,134,136,137,140,141,143,144,147,148,193,195,228,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'var_order_list':([27,],[53,]),'rest_union_block':([35,146,191,194,242,243,],[64,196,226,227,247,227,]),'rest_join_block':([38,62,67,137,140,147,],[68,68,145,68,190,197,]),'express_rel':([40,73,76,150,154,166,203,209,],[74,152,167,152,208,152,230,232,]),'express_arg':([40,73,76,84,150,154,155,166,169,170,171,173,203,209,216,235,],[75,153,75,172,153,207,210,153,213,214,215,217,75,153,237,246,]),'binary_func':([40,73,76,84,150,154,155,166,169,170,171,173,203,209,216,235,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'unary_func':([40,53,73,76,84,150,154,155,166,169,170,171,173,185,203,209,216,235,],[83,130,83,83,83,83,83,83,83,83,83,83,83,130,83,83,83,83,]),'UNARYOP':([40,73,76,84,150,154,155,166,169,170,171,173,203,209,216,235,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'predicate':([42,],[122,]),'desc_var':([53,185,],[126,222,]),'expression':([73,150,166,203,],[151,200,211,231,]),'RELOP':([75,153,172,207,210,213,214,215,217,237,246,],[154,154,216,154,216,216,216,216,216,216,216,]),'ARITOP':([75,153,172,207,210,213,214,215,217,237,246,],[155,155,155,155,155,155,155,155,155,155,155,]),'object':([122,],[176,]),'LOGOP':([152,230,],[203,203,]),'pattern_arg':([234,248,],[244,252,]),'regex_flag':([244,],[249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> parse_sparql","S'",1,None,None,None),
  ('parse_sparql -> prefix_list query order_by limit offset','parse_sparql',5,'p_parse_sparql_0','queryParser.py',181),
  ('parse_sparql -> prefix_list query order_by offset limit','parse_sparql',5,'p_parse_sparql_1','queryParser.py',189),
  ('prefix_list -> prefix prefix_list','prefix_list',2,'p_prefix_list','queryParser.py',197),
  ('prefix_list -> empty','prefix_list',1,'p_empty_prefix_list','queryParser.py',204),
  ('empty -> <empty>','empty',0,'p_empty','queryParser.py',211),
  ('prefix -> PREFIX uri','prefix',2,'p_prefix','queryParser.py',218),
  ('uri -> ID COLON ID','uri',3,'p_uri_0','queryParser.py',225),
  ('uri -> ID COLON URI','uri',3,'p_uri_1','queryParser.py',232),
  ('uri -> URI','uri',1,'p_uri_2','queryParser.py',239),
  ('order_by -> ORDER BY var_order_list desc_var','order_by',4,'p_order_by_0','queryParser.py',246),
  ('order_by -> empty','order_by',1,'p_order_by_1','queryParser.py',253),
  ('var_order_list -> empty','var_order_list',1,'p_var_order_list_0','queryParser.py',260),
  ('var_order_list -> var_order_list desc_var','var_order_list',2,'p_var_order_list_1','queryParser.py',267),
  ('desc_var -> DESC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_0','queryParser.py',274),
  ('desc_var -> VARIABLE','desc_var',1,'p_desc_var_1','queryParser.py',281),
  ('desc_var -> ASC LPAR VARIABLE RPAR','desc_var',4,'p_desc_var_2','queryParser.py',288),
  ('desc_var -> unary_func LPAR desc_var RPAR','desc_var',4,'p_desc_var_3','queryParser.py',295),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit_0','queryParser.py',302),
  ('limit -> empty','limit',1,'p_limit_1','queryParser.py',309),
  ('offset -> OFFSET NUMBER','offset',2,'p_offset_0','queryParser.py',316),
  ('offset -> empty','offset',1,'p_offset_1','queryParser.py',323),
  ('query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_0','queryParser.py',330),
  ('query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY','query',7,'p_query_1','queryParser.py',337),
  ('query -> ASK WHERE LKEY group_graph_pattern RKEY','query',5,'p_query_2','queryParser.py',344),
  ('query -> ASK LKEY group_graph_pattern RKEY','query',4,'p_query_3','queryParser.py',351),
  ('distinct -> DISTINCT','distinct',1,'p_distinct_0','queryParser.py',358),
  ('distinct -> empty','distinct',1,'p_distinct_1','queryParser.py',365),
  ('group_graph_pattern -> union_block','group_graph_pattern',1,'p_ggp_0','queryParser.py',372),
  ('union_block -> pjoin_block rest_union_block POINT pjoin_block','union_block',4,'p_union_block_0','queryParser.py',379),
  ('union_block -> pjoin_block rest_union_block pjoin_block','union_block',3,'p_union_block_1','queryParser.py',388),
  ('union_block -> pjoin_block rest_union_block','union_block',2,'p_union_block_2','queryParser.py',400),
  ('pjoin_block -> LKEY join_block RKEY','pjoin_block',3,'p_ppjoin_block_0','queryParser.py',407),
  ('pjoin_block -> join_block','pjoin_block',1,'p_ppjoin_block_1','queryParser.py',414),
  ('pjoin_block -> empty','pjoin_block',1,'p_ppjoin_block_2','queryParser.py',421),
  ('rest_union_block -> empty','rest_union_block',1,'p_rest_union_block_0','queryParser.py',428),
  ('rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block','rest_union_block',6,'p_rest_union_block_1','queryParser.py',435),
  ('join_block -> LKEY union_block RKEY rest_join_block','join_block',4,'p_join_block_0','queryParser.py',442),
  ('join_block -> bgp rest_join_block','join_block',2,'p_join_block_1','queryParser.py',454),
  ('rest_join_block -> empty','rest_join_block',1,'p_rest_join_block_0','queryParser.py',461),
  ('rest_join_block -> POINT bgp rest_join_block','rest_join_block',3,'p_rest_join_block_1','queryParser.py',468),
  ('rest_join_block -> bgp rest_join_block','rest_join_block',2,'p_rest_join_block_2','queryParser.py',475),
  ('bgp -> LKEY bgp UNION bgp rest_union_block RKEY','bgp',6,'p_bgp_0','queryParser.py',482),
  ('bgp -> bgp UNION bgp rest_union_block','bgp',4,'p_bgp_01','queryParser.py',490),
  ('bgp -> triple','bgp',1,'p_bgp_1','queryParser.py',498),
  ('bgp -> FILTER LPAR expression RPAR','bgp',4,'p_bgp_2','queryParser.py',505),
  ('bgp -> FILTER express_rel','bgp',2,'p_bgp_3','queryParser.py',512),
  ('bgp -> OPTIONAL LKEY group_graph_pattern RKEY','bgp',4,'p_bgp_4','queryParser.py',519),
  ('bgp -> LKEY join_block RKEY','bgp',3,'p_bgp_6','queryParser.py',533),
  ('expression -> express_rel LOGOP expression','expression',3,'p_expression_0','queryParser.py',543),
  ('expression -> express_rel','expression',1,'p_expression_1','queryParser.py',550),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression_2','queryParser.py',557),
  ('express_rel -> express_arg RELOP express_rel','express_rel',3,'p_express_rel_0','queryParser.py',564),
  ('express_rel -> express_arg','express_rel',1,'p_express_rel_1','queryParser.py',571),
  ('express_rel -> LPAR express_rel RPAR','express_rel',3,'p_express_rel_2','queryParser.py',578),
  ('express_rel -> NEG LPAR expression RPAR','express_rel',4,'p_express_rel_3','queryParser.py',585),
  ('express_rel -> NEG express_rel','express_rel',2,'p_express_rel_4','queryParser.py',592),
  ('express_arg -> uri','express_arg',1,'p_express_arg_0','queryParser.py',599),
  ('express_arg -> VARIABLE','express_arg',1,'p_express_arg_1','queryParser.py',606),
  ('express_arg -> CONSTANT','express_arg',1,'p_express_arg_2','queryParser.py',613),
  ('express_arg -> NUMBER','express_arg',1,'p_express_arg_3','queryParser.py',625),
  ('express_arg -> NUMBER POINT NUMBER','express_arg',3,'p_express_arg_03','queryParser.py',632),
  ('express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag','express_arg',6,'p_express_arg_4','queryParser.py',640),
  ('regex_flag -> RPAR','regex_flag',1,'p_regex_flags_0','queryParser.py',647),
  ('regex_flag -> COMA pattern_arg RPAR','regex_flag',3,'p_regex_flags_1','queryParser.py',654),
  ('pattern_arg -> CONSTANT','pattern_arg',1,'p_pattern_arg_0','queryParser.py',661),
  ('express_arg -> binary_func LPAR express_arg COMA express_arg RPAR','express_arg',6,'p_express_arg_5','queryParser.py',668),
  ('express_arg -> unary_func LPAR express_arg RPAR','express_arg',4,'p_express_arg_6','queryParser.py',675),
  ('express_arg -> UNARYOP express_arg','express_arg',2,'p_express_arg_7','queryParser.py',682),
  ('express_arg -> express_arg ARITOP express_arg','express_arg',3,'p_express_arg_8','queryParser.py',689),
  ('express_arg -> LPAR express_arg RPAR','express_arg',3,'p_express_arg_9','queryParser.py',696),
  ('express_arg -> express_arg RELOP express_arg','express_arg',3,'p_express_arg_10','queryParser.py',703),
  ('ARITOP -> PLUS','ARITOP',1,'p_arit_op_0','queryParser.py',710),
  ('ARITOP -> MINUS','ARITOP',1,'p_arit_op_1','queryParser.py',717),
  ('ARITOP -> TIMES','ARITOP',1,'p_arit_op_2','queryParser.py',724),
  ('ARITOP -> DIV','ARITOP',1,'p_arit_op_3','queryParser.py',731),
  ('UNARYOP -> PLUS','UNARYOP',1,'p_unaryarit_op_1','queryParser.py',738),
  ('UNARYOP -> MINUS','UNARYOP',1,'p_unaryarit_op_2','queryParser.py',745),
  ('LOGOP -> AND','LOGOP',1,'p_logical_op_0','queryParser.py',752),
  ('LOGOP -> OR','LOGOP',1,'p_logical_op_1','queryParser.py',759),
  ('RELOP -> EQUALS','RELOP',1,'p_relational_op_0','queryParser.py',766),
  ('RELOP -> LESS','RELOP',1,'p_relational_op_1','queryParser.py',773),
  ('RELOP -> LESSEQ','RELOP',1,'p_relational_op_2','queryParser.py',780),
  ('RELOP -> GREATER','RELOP',1,'p_relational_op_3','queryParser.py',787),
  ('RELOP -> GREATEREQ','RELOP',1,'p_relational_op_4','queryParser.py',794),
  ('RELOP -> NEQUALS','RELOP',1,'p_relational_op_5','queryParser.py',801),
  ('binary_func -> REGEX','binary_func',1,'p_binary_0','queryParser.py',808),
  ('binary_func -> SAMETERM','binary_func',1,'p_binary_1','queryParser.py',815),
  ('binary_func -> LANGMATCHES','binary_func',1,'p_binary_2','queryParser.py',822),
  ('binary_func -> CONSTANT','binary_func',1,'p_binary_3','queryParser.py',829),
  ('binary_func -> CONTAINS','binary_func',1,'p_binary_4','queryParser.py',836),
  ('unary_func -> BOUND','unary_func',1,'p_unary_0','queryParser.py',843),
  ('unary_func -> ISIRI','unary_func',1,'p_unary_1','queryParser.py',850),
  ('unary_func -> ISURI','unary_func',1,'p_unary_2','queryParser.py',857),
  ('unary_func -> ISBLANK','unary_func',1,'p_unary_3','queryParser.py',864),
  ('unary_func -> ISLITERAL','unary_func',1,'p_unary_4','queryParser.py',871),
  ('unary_func -> LANG','unary_func',1,'p_unary_5','queryParser.py',878),
  ('unary_func -> DATATYPE','unary_func',1,'p_unary_6','queryParser.py',885),
  ('unary_func -> STR','unary_func',1,'p_unary_7','queryParser.py',892),
  ('unary_func -> UPPERCASE','unary_func',1,'p_unary_8','queryParser.py',899),
  ('unary_func -> DOUBLE','unary_func',1,'p_unary_9','queryParser.py',906),
  ('unary_func -> INTEGER','unary_func',1,'p_unary_9','queryParser.py',907),
  ('unary_func -> DECIMAL','unary_func',1,'p_unary_9','queryParser.py',908),
  ('unary_func -> FLOAT','unary_func',1,'p_unary_9','queryParser.py',909),
  ('unary_func -> STRING','unary_func',1,'p_unary_9','queryParser.py',910),
  ('unary_func -> BOOLEAN','unary_func',1,'p_unary_9','queryParser.py',911),
  ('unary_func -> DATETIME','unary_func',1,'p_unary_9','queryParser.py',912),
  ('unary_func -> NONPOSINT','unary_func',1,'p_unary_9','queryParser.py',913),
  ('unary_func -> NEGATIVEINT','unary_func',1,'p_unary_9','queryParser.py',914),
  ('unary_func -> LONG','unary_func',1,'p_unary_9','queryParser.py',915),
  ('unary_func -> INT','unary_func',1,'p_unary_9','queryParser.py',916),
  ('unary_func -> SHORT','unary_func',1,'p_unary_9','queryParser.py',917),
  ('unary_func -> BYTE','unary_func',1,'p_unary_9','queryParser.py',918),
  ('unary_func -> NONNEGINT','unary_func',1,'p_unary_9','queryParser.py',919),
  ('unary_func -> UNSIGNEDLONG','unary_func',1,'p_unary_9','queryParser.py',920),
  ('unary_func -> UNSIGNEDINT','unary_func',1,'p_unary_9','queryParser.py',921),
  ('unary_func -> UNSIGNEDSHORT','unary_func',1,'p_unary_9','queryParser.py',922),
  ('unary_func -> UNSIGNEDBYTE','unary_func',1,'p_unary_9','queryParser.py',923),
  ('unary_func -> POSITIVEINT','unary_func',1,'p_unary_9','queryParser.py',924),
  ('unary_func -> ID COLON ID','unary_func',3,'p_unary_10','queryParser.py',931),
  ('unary_func -> uri','unary_func',1,'p_unary_11','queryParser.py',938),
  ('unary_func -> UCASE','unary_func',1,'p_unary_12','queryParser.py',945),
  ('unary_func -> LCASE','unary_func',1,'p_unary_13','queryParser.py',952),
  ('var_list -> var_list VARIABLE','var_list',2,'p_var_list','queryParser.py',959),
  ('var_list -> VARIABLE','var_list',1,'p_single_var_list','queryParser.py',966),
  ('triple -> subject predicate object','triple',3,'p_triple_0','queryParser.py',973),
  ('predicate -> ID','predicate',1,'p_predicate_rdftype','queryParser.py',980),
  ('predicate -> uri','predicate',1,'p_predicate_uri','queryParser.py',993),
  ('predicate -> VARIABLE','predicate',1,'p_predicate_var','queryParser.py',1000),
  ('subject -> uri','subject',1,'p_subject_uri','queryParser.py',1007),
  ('subject -> VARIABLE','subject',1,'p_subject_variable','queryParser.py',1014),
  ('object -> uri','object',1,'p_object_uri','queryParser.py',1021),
  ('object -> VARIABLE','object',1,'p_object_variable','queryParser.py',1028),
  ('object -> CONSTANT','object',1,'p_object_constant_0','queryParser.py',1035),
  ('object -> DOUBLECONST','object',1,'p_object_constant_1','queryParser.py',1047),
  ('object -> DECIMALCONST','object',1,'p_object_constant_2','queryParser.py',1059),
  ('object -> NUMBER','object',1,'p_object_constant_3','queryParser.py',1071),
]
